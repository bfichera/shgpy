2020-05-30 23:36:01,193 matplotlib   DEBUG    CONFIGDIR=/home/bfichera/.config/matplotlib
2020-05-30 23:36:01,193 matplotlib   DEBUG    (private) matplotlib data path: /usr/lib/python3.8/site-packages/matplotlib/mpl-data
2020-05-30 23:36:01,195 matplotlib   DEBUG    matplotlib data path: /usr/lib/python3.8/site-packages/matplotlib/mpl-data
2020-05-30 23:36:01,195 matplotlib   DEBUG    loaded rc file /usr/lib/python3.8/site-packages/matplotlib/mpl-data/matplotlibrc
2020-05-30 23:36:01,197 matplotlib   DEBUG    matplotlib version 3.2.1
2020-05-30 23:36:01,197 matplotlib   DEBUG    interactive is False
2020-05-30 23:36:01,197 matplotlib   DEBUG    platform is linux
2020-05-30 23:36:01,197 matplotlib   DEBUG    loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'posix', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'linecache', 'traceback', 'unittest.util', 'unittest.result', 'collections.abc', 'concurrent', '_string', 'string', 'threading', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'math', 'select', 'selectors', 'errno', 'socket', 'signal', '_posixsubprocess', 'subprocess', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', '_opcode', 'opcode', 'dis', 'inspect', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'typing.io', 'typing.re', 'typing', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'difflib', 'pprint', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'fnmatch', 'unittest.loader', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', 'locale', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'textwrap', '_datetime', 'datetime', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'ntpath', 'urllib', 'urllib.parse', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy.core._dtype_ctypes', 'platform', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', '_ast', 'ast', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', '_pydecimal', 'decimal', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_17', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', '_bisect', 'bisect', '_sha512', '_random', 'random', 'secrets', 'numpy.random._bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'mpmath.usertools', 'mpmath.libmp.six.moves', 'mpmath.libmp.six', 'gmpy2.gmpy2', 'gmpy2', 'mpmath.libmp.backend', 'mpmath.libmp.libintmath', 'mpmath.libmp.libmpf', 'mpmath.libmp.libelefun', 'mpmath.libmp.libmpc', 'mpmath.libmp.gammazeta', 'mpmath.libmp.libhyper', 'mpmath.libmp.libmpi', 'mpmath.libmp', 'cmath', 'mpmath.functions.functions', 'mpmath.functions.factorials', 'mpmath.functions.hypergeometric', 'mpmath.functions.expintegrals', 'mpmath.functions.bessel', 'mpmath.functions.orthogonal', 'mpmath.functions.theta', 'mpmath.functions.elliptic', 'mpmath.functions.zeta', 'mpmath.functions.rszeta', 'mpmath.functions.zetazeros', 'mpmath.functions.qfunctions', 'mpmath.functions', 'mpmath.calculus.calculus', 'mpmath.calculus.approximation', 'mpmath.calculus.differentiation', 'mpmath.calculus.extrapolation', 'mpmath.calculus.polynomials', 'mpmath.calculus', 'mpmath.calculus.quadrature', 'mpmath.calculus.inverselaplace', 'copy', 'mpmath.calculus.optimization', 'mpmath.calculus.odes', 'mpmath.matrices.eigen', 'mpmath.matrices.eigen_symmetric', 'mpmath.matrices', 'mpmath.matrices.matrices', 'mpmath.matrices.calculus', 'mpmath.matrices.linalg', 'mpmath.identification', 'colorsys', 'mpmath.visualization', 'mpmath.ctx_base', 'mpmath.math2', 'mpmath.function_docs', 'mpmath.ctx_fp', 'mpmath.rational', 'mpmath.ctx_mp_python', 'mpmath.ctx_mp', 'mpmath.ctx_iv', 'mpmath', 'sympy.release', 'distutils', 'distutils.version', 'sympy.external.importtools', 'sympy.external', 'sympy.core.compatibility', 'sympy.core.cache', 'sympy.core.parameters', 'sympy.core.logic', 'sympy.core.facts', 'sympy.core.core', 'sympy.core.assumptions', 'sympy.core.singleton', 'sympy.core.decorators', 'sympy.core.basic', 'sympy.core.sympify', 'sympy.utilities.enumerative', 'sympy.utilities.iterables', 'sympy.utilities.misc', 'cmd', 'bdb', 'codeop', 'code', 'glob', 'pdb', 'gc', 'timeit', 'doctest', 'tempfile', 'sympy.testing.runtests', 'sympy.testing', 'sympy.utilities.decorator', 'sympy.utilities.lambdify', 'sympy.utilities.exceptions', 'sympy.utilities.source', 'sympy.utilities.timeutils', 'sympy.utilities', 'sympy.core.evalf', 'sympy.core.operations', 'fractions', 'sympy.core.containers', 'sympy.core.add', 'sympy.core.rules', 'sympy.logic.boolalg', 'sympy.logic.inference', 'sympy.logic', 'sympy.core.symbol', 'sympy.core.function', 'sympy.core.power', 'sympy.core.numbers', 'sympy.core.mul', 'sympy.core.mod', 'sympy.core.coreerrors', 'sympy.core.exprtools', 'sympy.core.expr', 'sympy.core.relational', 'sympy.core.multidimensional', 'sympy.core', 'sympy.assumptions.assume', 'sympy.assumptions.cnf', 'sympy.assumptions.ask_generated', 'sympy.assumptions.ask', 'sympy.assumptions.refine', 'sympy.assumptions', 'sympy.polys.polyerrors', 'sympy.polys.polyoptions', 'sympy.polys.domains.domainelement', 'sympy.polys.orderings', 'sympy.polys.polyutils', 'sympy.polys.domains.domain', 'sympy.polys.domains.ring', 'sympy.polys.domains.field', 'sympy.printing.conventions', 'sympy.printing.precedence', 'sympy.printing.printer', 'sympy.printing.str', 'unicodedata', 'sympy.core.alphabets', 'sympy.printing.pretty.pretty_symbology', 'sympy.printing.pretty.stringpict', 'sympy.printing.pretty.pretty', 'sympy.printing.pretty', 'sympy.printing.latex', 'sympy.printing.mathml', 'sympy.printing.repr', 'sympy.printing.python', 'sympy.codegen.ast', 'sympy.codegen', 'sympy.printing.codeprinter', 'sympy.printing.pycode', 'sympy.sets.contains', 'sympy.sets.sets', 'sympy.sets.fancysets', 'sympy.sets.conditionset', 'sympy.sets.ordinals', 'sympy.sets.powerset', 'sympy.sets', 'sympy.printing.ccode', 'sympy.printing.glsl', 'sympy.printing.cxxcode', 'sympy.codegen.fnodes', 'sympy.printing.fcode', 'sympy.printing.rcode', 'sympy.printing.jscode', 'sympy.printing.julia', 'sympy.printing.mathematica', 'sympy.printing.octave', 'sympy.printing.rust', 'sympy.utilities.pkgdata', 'sympy.utilities.mathml', 'sympy.printing.gtk', 'sympy.printing.preview', 'sympy.printing.tree', 'sympy.printing.tableform', 'sympy.printing.dot', 'sympy.printing.maple', 'sympy.printing', 'sympy.printing.defaults', 'sympy.polys.domains.pythonrational', 'sympy.polys.domains.groundtypes', 'sympy.polys.domains.modularinteger', 'sympy.polys.domains.simpledomain', 'sympy.polys.domains.finitefield', 'sympy.polys.domains.characteristiczero', 'sympy.polys.domains.integerring', 'sympy.polys.domains.rationalfield', 'sympy.polys.domains.mpelements', 'sympy.polys.domains.realfield', 'sympy.polys.domains.complexfield', 'sympy.polys.domains.pythonintegerring', 'sympy.polys.domains.pythonfinitefield', 'sympy.polys.domains.gmpyintegerring', 'sympy.polys.domains.gmpyfinitefield', 'sympy.polys.domains.pythonrationalfield', 'sympy.polys.domains.gmpyrationalfield', 'sympy.polys.monomials', 'sympy.polys.densebasic', 'sympy.polys.densearith', 'sympy.polys.densetools', 'array', 'sympy.ntheory.primetest', 'sympy.ntheory.generate', 'sympy.ntheory.digits', 'sympy.ntheory.factor_', 'sympy.ntheory.residue_ntheory', 'sympy.ntheory.partitions_', 'sympy.ntheory.multinomial', 'sympy.ntheory.continued_fraction', 'sympy.ntheory.egyptian_fraction', 'sympy.ntheory', 'sympy.polys.polyconfig', 'sympy.polys.galoistools', 'sympy.polys.euclidtools', 'sympy.polys.sqfreetools', 'sympy.polys.factortools', 'sympy.polys.rootisolation', 'sympy.polys.polyclasses', 'sympy.polys.domains.algebraicfield', 'sympy.polys.domains.compositedomain', 'sympy.polys.domains.polynomialring', 'sympy.polys.domains.fractionfield', 'sympy.polys.domains.expressiondomain', 'sympy.polys.domains', 'sympy.polys.constructor', 'sympy.polys.fglmtools', 'sympy.polys.groebnertools', 'sympy.polys.rationaltools', 'sympy.polys.polytools', 'sympy.functions.combinatorial', 'sympy.functions.combinatorial.factorials', 'sympy.functions.elementary', 'sympy.functions.elementary.miscellaneous', 'sympy.functions.elementary.exponential', 'sympy.functions.elementary.integers', 'sympy.functions.elementary.hyperbolic', 'sympy.functions.elementary.piecewise', 'sympy.functions.elementary.trigonometric', 'sympy.utilities.memoization', 'sympy.functions.combinatorial.numbers', 'sympy.functions.elementary.complexes', 'sympy.functions.special', 'sympy.functions.special.hyper', 'sympy.functions.special.error_functions', 'sympy.functions.special.zeta_functions', 'sympy.functions.special.gamma_functions', 'sympy.functions.special.tensor_functions', 'sympy.functions.special.delta_functions', 'sympy.functions.special.singularity_functions', 'sympy.functions.special.bsplines', 'sympy.polys.orthopolys', 'sympy.functions.special.bessel', 'sympy.functions.special.polynomials', 'sympy.functions.special.spherical_harmonics', 'sympy.functions.special.elliptic_integrals', 'sympy.functions.special.beta_functions', 'sympy.functions.special.mathieu_functions', 'sympy.functions', 'sympy.polys.compatibility', 'sympy.polys.heuristicgcd', 'sympy.utilities.magic', 'sympy.polys.rings', 'sympy.polys.specialpolys', 'sympy.polys.polyfuncs', 'sympy.polys.ring_series', 'sympy.polys.polyquinticconst', 'sympy.simplify.gammasimp', 'sympy.simplify.combsimp', 'sympy.simplify.cse_opts', 'sympy.simplify.powsimp', 'sympy.simplify.sqrtdenest', 'sympy.simplify.radsimp', 'sympy.simplify.cse_main', 'sympy.strategies.util', 'sympy.strategies.rl', 'sympy.strategies.core', 'sympy.strategies.traverse', 'sympy.strategies.tools', 'sympy.strategies.branch.core', 'sympy.strategies.branch.traverse', 'sympy.strategies.branch.tools', 'sympy.strategies.branch', 'sympy.strategies', 'sympy.strategies.tree', 'sympy.simplify.trigsimp', 'sympy.simplify.simplify', 'sympy.simplify.fu', 'sympy.simplify.traversaltools', 'sympy.simplify.epathtools', 'sympy.series.order', 'sympy.simplify.ratsimp', 'sympy.series.gruntz', 'sympy.series.limits', 'sympy.series.series', 'sympy.series.approximants', 'sympy.series.residues', 'sympy.tensor.indexed', 'sympy.tensor.index_methods', 'sympy.tensor.array.ndim_array', 'sympy.tensor.array.mutable_ndim_array', 'sympy.tensor.array.dense_ndim_array', 'sympy.tensor.array.sparse_ndim_array', 'sympy.tensor.array.arrayop', 'sympy.tensor.array.array_comprehension', 'sympy.tensor.array', 'sympy.tensor', 'sympy.series.sequences', 'sympy.series.series_class', 'sympy.series.fourier', 'sympy.discrete.transforms', 'sympy.discrete.convolutions', 'sympy.discrete', 'sympy.series.formal', 'sympy.series.limitseq', 'sympy.series', 'sympy.simplify.hyperexpand', 'sympy.simplify', 'sympy.polys.polyroots', 'sympy.polys.rootoftools', 'sympy.printing.lambdarepr', 'sympy.polys.numberfields', 'sympy.matrices.utilities', 'sympy.matrices.common', 'sympy.matrices.determinant', 'sympy.matrices.reductions', 'sympy.matrices.subspaces', 'sympy.matrices.eigen', 'sympy.matrices.decompositions', 'sympy.matrices.graph', 'sympy.matrices.solvers', 'sympy.matrices.inverse', 'sympy.matrices.matrices', 'sympy.matrices.dense', 'sympy.matrices.sparse', 'sympy.matrices.sparsetools', 'sympy.matrices.expressions.matpow', 'sympy.matrices.expressions.inverse', 'sympy.matrices.expressions.transpose', 'sympy.matrices.expressions.permutation', 'sympy.matrices.expressions.matmul', 'sympy.matrices.expressions.matadd', 'sympy.matrices.expressions.matexpr', 'sympy.matrices.expressions.slice', 'sympy.matrices.expressions.trace', 'sympy.matrices.expressions.determinant', 'sympy.matrices.expressions.blockmatrix', 'sympy.matrices.expressions.funcmatrix', 'sympy.matrices.expressions.adjoint', 'sympy.matrices.expressions.hadamard', 'sympy.matrices.expressions.diagonal', 'sympy.matrices.expressions.dotproduct', 'sympy.matrices.expressions.kronecker', 'sympy.matrices.expressions', 'sympy.matrices.immutable', 'sympy.matrices', 'sympy.polys.partfrac', 'sympy.polys.fields', 'sympy.polys', 'sympy.concrete.expr_with_limits', 'sympy.concrete.expr_with_intlimits', 'sympy.concrete.products', 'sympy.calculus.euler', 'sympy.integrals.manualintegrate', 'sympy.integrals.trigonometry', 'sympy.integrals.meijerint', 'sympy.integrals.integrals', 'sympy.solvers.inequalities', 'sympy.integrals.transforms', 'sympy.integrals.singularityfunctions', 'sympy.integrals', 'sympy.solvers.polysys', 'sympy.solvers.bivariate', 'sympy.solvers.solvers', 'sympy.calculus.util', 'sympy.solvers.solveset', 'sympy.solvers.diophantine.diophantine', 'sympy.solvers.diophantine', 'sympy.solvers.recurr', 'sympy.solvers.deutils', 'sympy.solvers.pde', 'sympy.solvers.ode.subscheck', 'sympy.solvers.ode.single', 'sympy.solvers.ode.ode', 'sympy.solvers.ode', 'sympy.solvers.decompogen', 'sympy.solvers', 'sympy.calculus.singularities', 'sympy.calculus.finite_diff', 'sympy.calculus', 'sympy.concrete.gosper', 'sympy.concrete.summations', 'sympy.concrete', 'sympy.geometry.exceptions', 'sympy.multipledispatch.utils', 'sympy.multipledispatch.conflict', 'sympy.multipledispatch.dispatcher', 'sympy.multipledispatch.core', 'sympy.multipledispatch', 'sympy.sets.handlers', 'sympy.sets.handlers.intersection', 'sympy.sets.handlers.union', 'sympy.geometry.entity', 'sympy.geometry.point', 'sympy.geometry.util', 'sympy.geometry.line', 'sympy.geometry.plane', 'sympy.geometry.polygon', 'sympy.geometry.ellipse', 'sympy.geometry.curve', 'sympy.geometry.parabola', 'sympy.geometry', 'sympy.parsing.sympy_parser', 'sympy.parsing', 'sympy.algebras.quaternion', 'sympy.algebras', 'sympy.plotting.experimental_lambdify', 'sympy.plotting.textplot', 'sympy.plotting.plot', 'sympy.plotting.intervalmath.interval_membership', 'sympy.plotting.intervalmath.interval_arithmetic', 'sympy.plotting.intervalmath.lib_interval', 'sympy.plotting.intervalmath', 'sympy.plotting.plot_implicit', 'sympy.plotting.pygletplot', 'sympy.plotting', 'sympy.interactive.printing', 'sympy.interactive.session', 'sympy.interactive', 'sympy.deprecated.class_registry', 'sympy.deprecated', 'sympy', 'shgpy.core.util', '_csv', 'csv', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib.six', 'scipy._lib._version', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'numpy.dual', 'scipy.fft', 'scipy', 'scipy.special.sf_error', '_cython_0_29_14', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.linalg.linalg_version', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.distance', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'shgpy.core.data_handler', 'shgpy.core', 'shgpy', 'tests', 'tests.test_data_handler', 'tests.test_formfit', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize._nnls', 'scipy.optimize.nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'shgpy._logging_config', 'shgpy.fourier_formfit', 'shgpy.plotter', 'matplotlib', 'gzip', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver']
2020-05-30 23:36:01,228 matplotlib   DEBUG    CACHEDIR=/home/bfichera/.cache/matplotlib
2020-05-30 23:36:01,230 matplotlib.font_manager DEBUG    Using fontManager instance from /home/bfichera/.cache/matplotlib/fontlist-v310.json
2020-05-30 23:36:01,350 matplotlib.pyplot DEBUG    Loaded backend qt5agg version unknown.
2020-05-30 23:36:01,442 matplotlib.pyplot DEBUG    Loaded backend qt5agg version unknown.
2020-05-30 23:36:01,443 matplotlib.pyplot DEBUG    Loaded backend Qt5Agg version unknown.
2020-05-30 23:36:01,952 root         DEBUG    Starting energy function generation.
2020-05-30 23:36:02,375 root         DEBUG    Done with energy function generation. It took 0.42295002937316895 seconds.
2020-05-30 23:36:02,375 root         DEBUG    Starting basinhopping minimization.
2020-05-30 23:36:03,104 root         DEBUG    Done with basinhopping minimization. It took 0.729506254196167 seconds.
2020-05-30 23:36:03,106 root         DEBUG    Starting energy function generation.
2020-05-30 23:36:03,964 root         DEBUG    Done with energy function generation. It took 0.858112096786499 seconds.
2020-05-30 23:36:03,964 root         DEBUG    Starting basinhopping minimization.
2020-05-30 23:36:04,736 root         DEBUG    Done with basinhopping minimization. It took 0.772022008895874 seconds.
2020-05-30 23:36:04,737 root         DEBUG    Starting energy function generation.
2020-05-30 23:36:05,074 root         DEBUG    Done with energy function generation. It took 0.336503267288208 seconds.
2020-05-30 23:36:05,074 root         DEBUG    Starting basinhopping minimization.
2020-05-30 23:36:05,342 root         DEBUG    Done with basinhopping minimization. It took 0.2679765224456787 seconds.
2020-05-30 23:36:05,343 root         DEBUG    Starting energy function generation.
2020-05-30 23:36:05,867 root         DEBUG    Done with energy function generation. It took 0.5234732627868652 seconds.
2020-05-30 23:36:05,867 root         DEBUG    Starting basinhopping minimization.
2020-05-30 23:36:06,256 root         DEBUG    Done with basinhopping minimization. It took 0.3887331485748291 seconds.
2020-05-30 23:36:06,313 root         DEBUG    Starting residual function generation.
2020-05-30 23:36:06,636 root         DEBUG    Done with residual function generation. It took 0.3224067687988281 seconds.
2020-05-30 23:36:06,636 root         DEBUG    Starting least squares minimizations.
2020-05-30 23:36:06,657 root         DEBUG    Finished least squares minimization. It took 0.02076864242553711 seconds.
2020-05-30 23:36:06,669 root         DEBUG    Starting residual function generation.
2020-05-30 23:36:06,922 root         DEBUG    Done with residual function generation. It took 0.25322389602661133 seconds.
2020-05-30 23:36:06,922 root         DEBUG    Starting least squares minimizations.
2020-05-30 23:36:06,947 root         DEBUG    Finished least squares minimization. It took 0.02444005012512207 seconds.
2020-05-30 23:36:07,359 matplotlib.font_manager DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,360 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,361 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Sogdian' (NotoSansOldSogdian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Music' (NotoMusic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.otf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Anatolian Hieroglyphs' (NotoSansAnatolianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,362 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Variable' (SourceCodeVariable-Roman.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,363 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,364 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Indic Siyaq Numbers' (NotoSansIndicSiyaqNumbers-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.otf) italic normal semibold normal>) = 11.24
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,365 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.otf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,366 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,367 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tangut' (NotoSerifTangut-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,368 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,369 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,370 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil Supplement' (NotoSansTamilSupplement-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Math' (NotoSansMath-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols2' (NotoSansSymbols2-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,371 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Grantha' (NotoSansGrantha-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,372 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,373 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-VF.otf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,374 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.otf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,375 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Dogra' (NotoSerifDogra-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,376 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mayan Numerals' (NotoSansMayanNumerals-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.otf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,377 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,378 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.otf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,379 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,380 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Semibold.ttf) normal normal bold normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal bold normal>) = 10.335
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,381 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.otf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.otf) normal normal semibold normal>) = 10.24
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,382 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,383 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Variable' (SourceCodeVariable-Italic.otf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,384 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.otf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,385 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.otf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,386 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,387 matplotlib.font_manager DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/usr/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-05-30 23:36:07,407 matplotlib.font_manager DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-05-30 23:36:07,407 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,408 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,409 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Sogdian' (NotoSansOldSogdian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Music' (NotoMusic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.otf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Anatolian Hieroglyphs' (NotoSansAnatolianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,410 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Variable' (SourceCodeVariable-Roman.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,411 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,412 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Indic Siyaq Numbers' (NotoSansIndicSiyaqNumbers-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.otf) italic normal semibold normal>) = 11.24
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,413 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.otf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,414 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tangut' (NotoSerifTangut-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,415 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,416 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil Supplement' (NotoSansTamilSupplement-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Math' (NotoSansMath-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,417 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols2' (NotoSansSymbols2-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Grantha' (NotoSansGrantha-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,418 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,419 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-VF.otf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,420 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.otf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,421 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Dogra' (NotoSerifDogra-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,422 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,423 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mayan Numerals' (NotoSansMayanNumerals-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.otf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,424 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,425 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,426 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.otf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Canadian Aboriginal' (NotoSansCanadianAboriginal-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,427 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,428 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-LightItalic.ttf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Semibold.ttf) normal normal bold normal>) = 10.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliqUrdu-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tibetan' (NotoSerifTibetan-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,429 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal bold normal>) = 10.335
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.otf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,430 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.otf) normal normal semibold normal>) = 10.24
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,431 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,432 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,432 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,432 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,432 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,433 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,433 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,433 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,433 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,434 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,434 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,435 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,435 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,436 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,436 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,437 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,437 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,438 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,438 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,439 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,439 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,439 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,439 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,440 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,441 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Variable' (SourceCodeVariable-Italic.otf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,442 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.otf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,443 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,444 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Gurmukhi' (NotoSerifGurmukhi-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,445 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,446 matplotlib.font_manager DEBUG    findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.otf) italic normal light normal>) = 11.24
2020-05-30 23:36:07,446 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,446 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,446 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-05-30 23:36:07,446 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Black.ttf) normal normal black normal>) = 10.525
2020-05-30 23:36:07,447 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,447 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,447 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Medium.ttf) normal normal medium normal>) = 10.145
2020-05-30 23:36:07,447 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,447 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,448 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,448 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,448 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Tamil Slanted' (NotoSerifTamilSlanted-Thin.ttf) normal normal 400 normal>) = 10.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal 700 normal>) = 10.335
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Light.ttf) normal normal light normal>) = 10.24
2020-05-30 23:36:07,449 matplotlib.font_manager DEBUG    findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-05-30 23:36:07,450 matplotlib.font_manager DEBUG    findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/usr/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-05-30 23:36:08,595 matplotlib.axes._base DEBUG    not adjusting title pos because a title was already placed manually: 1.050000
2020-05-30 23:36:08,608 matplotlib.axes._base DEBUG    not adjusting title pos because a title was already placed manually: 1.050000
2020-05-30 23:36:08,623 matplotlib.axes._base DEBUG    not adjusting title pos because a title was already placed manually: 1.050000
2020-05-30 23:36:08,640 matplotlib.axes._base DEBUG    not adjusting title pos because a title was already placed manually: 1.050000
